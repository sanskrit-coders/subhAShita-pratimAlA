format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes
compile options:
4 items
0 -> -bootclasspath
1 -> /home/vvasuki/.android/sbt/sdk/platforms/android-24/android.jar
2 -> -javabootclasspath
3 -> /home/vvasuki/.android/sbt/sdk/platforms/android-24/android.jar
javac options:
7 items
0 -> -bootclasspath
1 -> /home/vvasuki/.android/sbt/sdk/platforms/android-24/android.jar
2 -> -g
3 -> -source
4 -> 1.7
5 -> -target
6 -> 1.7
compiler version:
1 items
0 -> 2.10.6
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
31 items
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/Setup$1.class
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/Setup$2.class
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/Setup.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$anim.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$attr.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$bool.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$color.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$dimen.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$drawable.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$id.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$integer.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$layout.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$string.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$style.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$styleable.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/BuildConfig.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/BuildConfig.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$anim.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$attr.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$bool.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$color.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$dimen.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$drawable.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$id.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$integer.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$layout.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$mipmap.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$string.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$style.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$styleable.class
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R.class
binary dependencies:
13 items
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /home/vvasuki/.android/sbt/exploded-aars/com.android.support-appcompat-v7-24.2.1/classes.jar
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-compat-24.2.1/classes.jar
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-compat-24.2.1/libs/internal_impl-24.2.1.jar
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-core-utils-24.2.1/classes.jar
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-fragment-24.2.1/classes.jar
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-fragment-24.2.1/libs/internal_impl-24.2.1.jar
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /home/vvasuki/.android/sbt/sdk/platforms/android-24/android.jar
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /home/vvasuki/.ivy2/cache/com.loopj.android/android-async-http/jars/android-async-http-1.4.5.jar
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /home/vvasuki/.ivy2/cache/org.apache.httpcomponents/httpcore/jars/httpcore-4.4.6.jar
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /usr/lib/jvm/java-8-oracle/jre/lib/rt.jar
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /usr/lib/jvm/java-8-oracle/jre/lib/rt.jar
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/BuildConfig.java -> /usr/lib/jvm/java-8-oracle/jre/lib/rt.jar
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /usr/lib/jvm/java-8-oracle/jre/lib/rt.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
5 items
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/BuildConfig.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/BuildConfig.java
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> /home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java
member reference external dependencies:
0 items
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
31 items
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> sanskritcode.subhashita_pratimala.Setup
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> sanskritcode.subhashita_pratimala.Setup$1
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> sanskritcode.subhashita_pratimala.Setup$2
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$anim
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$attr
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$bool
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$color
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$dimen
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$drawable
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$id
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$integer
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$layout
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$string
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$style
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> android.support.v7.appcompat.R$styleable
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/BuildConfig.java -> sanskritcode.subhashita_pratimala.BuildConfig
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> sanskritcode.subhashita_pratimala.R
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> sanskritcode.subhashita_pratimala.R$anim
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> sanskritcode.subhashita_pratimala.R$attr
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> sanskritcode.subhashita_pratimala.R$bool
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> sanskritcode.subhashita_pratimala.R$color
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> sanskritcode.subhashita_pratimala.R$dimen
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> sanskritcode.subhashita_pratimala.R$drawable
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> sanskritcode.subhashita_pratimala.R$id
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> sanskritcode.subhashita_pratimala.R$integer
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> sanskritcode.subhashita_pratimala.R$layout
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> sanskritcode.subhashita_pratimala.R$mipmap
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> sanskritcode.subhashita_pratimala.R$string
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> sanskritcode.subhashita_pratimala.R$style
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> sanskritcode.subhashita_pratimala.R$styleable
used names:
0 items
product stamps:
31 items
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$anim.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$attr.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$bool.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$color.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$dimen.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$drawable.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$id.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$integer.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$layout.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$string.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$style.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R$styleable.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/android/support/v7/appcompat/R.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/BuildConfig.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$anim.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$attr.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$bool.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$color.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$dimen.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$drawable.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$id.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$integer.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$layout.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$mipmap.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$string.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$style.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R$styleable.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/R.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/Setup$1.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/Setup$2.class -> lastModified(1490395763000)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/intermediates/classes/sanskritcode/subhashita_pratimala/Setup.class -> lastModified(1490395763000)
source stamps:
4 items
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> hash(837fc73351a0b30126f0e739d31d54e4e0653cb1)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> hash(43710823ab42138f35654527b8660be15a17ece8)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/BuildConfig.java -> hash(3e6ba40a8c19aa690043b0207083555140ebed3c)
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> hash(3aab30bf7634caf48811ed482964e2921dc288e5)
binary stamps:
10 items
/home/vvasuki/.android/sbt/exploded-aars/com.android.support-appcompat-v7-24.2.1/classes.jar -> lastModified(1473840884000)
/home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-compat-24.2.1/classes.jar -> lastModified(1473840874000)
/home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-compat-24.2.1/libs/internal_impl-24.2.1.jar -> lastModified(1473840874000)
/home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-core-utils-24.2.1/classes.jar -> lastModified(1473840878000)
/home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-fragment-24.2.1/classes.jar -> lastModified(1473840880000)
/home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-fragment-24.2.1/libs/internal_impl-24.2.1.jar -> lastModified(1473840880000)
/home/vvasuki/.android/sbt/sdk/platforms/android-24/android.jar -> lastModified(1490394492000)
/home/vvasuki/.ivy2/cache/com.loopj.android/android-async-http/jars/android-async-http-1.4.5.jar -> lastModified(1403451682000)
/home/vvasuki/.ivy2/cache/org.apache.httpcomponents/httpcore/jars/httpcore-4.4.6.jar -> lastModified(1483797006000)
/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar -> lastModified(1415811671000)
class names:
10 items
/home/vvasuki/.android/sbt/exploded-aars/com.android.support-appcompat-v7-24.2.1/classes.jar -> android.support.v7.app.AppCompatActivity
/home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-compat-24.2.1/classes.jar -> android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback
/home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-compat-24.2.1/libs/internal_impl-24.2.1.jar -> android.support.v4.app.ActivityCompatApi23$RequestPermissionsRequestCodeValidator
/home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-core-utils-24.2.1/classes.jar -> android.support.v4.app.TaskStackBuilder$SupportParentable
/home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-fragment-24.2.1/classes.jar -> android.support.v4.app.FragmentActivity
/home/vvasuki/.android/sbt/exploded-aars/com.android.support-support-fragment-24.2.1/libs/internal_impl-24.2.1.jar -> android.support.v4.app.BaseFragmentActivityJB
/home/vvasuki/.android/sbt/sdk/platforms/android-24/android.jar -> android.content.Context
/home/vvasuki/.ivy2/cache/com.loopj.android/android-async-http/jars/android-async-http-1.4.5.jar -> com.loopj.android.http.AsyncHttpClient
/home/vvasuki/.ivy2/cache/org.apache.httpcomponents/httpcore/jars/httpcore-4.4.6.jar -> org.apache.http.Header
/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar -> java.lang.Object
internal apis:
4 items
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> 

/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> 

/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/BuildConfig.java -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhww2UKJgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAPc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwwP/hrXQABm5vdGlmeXNxAH4ADH6nJtx0AAxWRVJTSU9OX0NPREVzcQB+AAzUeN6RdAAEd2FpdHNxAH4ADOwp5+l0AAZlcXVhbHNzcQB+AAzziaepdAAFREVCVUdzcQB+AAwSfP3+dAAJbm90aWZ5QWxsc3EAfgAMaIOz2nQABkZMQVZPUnNxAH4ADLFm4lR0AAxWRVJTSU9OX05BTUVzcQB+AAxp67EIdAAGPGluaXQ+c3EAfgAMvOUojnQADkFQUExJQ0FUSU9OX0lEc3EAfgAMCXNbd3QAC0J1aWxkQ29uZmlnc3EAfgAM0VHKZnQACHRvU3RyaW5nc3EAfgAMTBrA0XQACGdldENsYXNzc3EAfgAM1DCnenQACkJVSUxEX1RZUEVzcQB+AAzqAeWNdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgA1eHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAEdAAtc2Fuc2tyaXRjb2RlLnN1Ymhhc2hpdGFfcHJhdGltYWxhLkJ1aWxkQ29uZmlndXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAABdAAMc2NhbGEudGhyb3dzc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AE5zcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4ANUwACWluaGVyaXRlZHEAfgA1TAAHcGFyZW50c3EAfgA1eHEAfgBTc3EAfgBOdXEAfgAwAAAAAHNxAH4ATnVxAH4AMAAAAABzcQB+AE51cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAXNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AFJ0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AFJzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AGt0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AGxzcQB+ADJxAH4AP3EAfgBBcQB+AENxAH4ARHEAfgBGfnEAfgBHdAAGTW9kdWxldXEAfgBLAAAAAHNxAH4ATnEAfgBUc3EAfgBOc3EAfgBWc3EAfgBOdXEAfgAwAAAAAHNxAH4ATnVxAH4AMAAAAABzcQB+AE51cQB+AF0AAAAAdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAhc2Fuc2tyaXRjb2RlLnN1Ymhhc2hpdGFfcHJhdGltYWxhc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFbAoKKZ3VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AEsvaG9tZS92dmFzdWtpL3N1YmhBU2hpdGEtcHJhdGltQWxBL2FwcC90YXJnZXQvYW5kcm9pZC9pbnRlcm1lZGlhdGVzL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQ+a6QKjBmqaQBDsCBwg1VRQOvtPA==
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> 

external apis:
0 items
source infos:
4 items
/home/vvasuki/subhAShita-pratimAlA/app/src/main/java/sanskritcode/subhashita_pratimala/Setup.java -> 
AAAAAAAAAAA=
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/android/support/v7/appcompat/R.java -> 
AAAAAAAAAAA=
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/BuildConfig.java -> 
AAAAAAAAAAA=
/home/vvasuki/subhAShita-pratimAlA/app/target/android/generated/source/sanskritcode/subhashita_pratimala/R.java -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWwKCimd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASy9ob21lL3Z2YXN1a2kvc3ViaEFTaGl0YS1wcmF0aW1BbEEvYXBwL3RhcmdldC9hbmRyb2lkL2ludGVybWVkaWF0ZXMvY2xhc3Nlc3QAAS8=
